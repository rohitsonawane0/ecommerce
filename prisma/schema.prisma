generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int        @id @default(autoincrement())
  name        String
  slug        String     @unique
  parentId    Int?
  parent      Category?  @relation("CategoryToSubcategory", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryToSubcategory")
  description String?
  imageUrl    String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  isDeleted   Boolean    @default(false)
  deletedAt   DateTime?
  products    Product[]  @relation("ProductCategories")
}

model Brand {
  id          Int       @id @default(autoincrement())
  name        String
  slug        String    @unique
  description String?
  logoUrl     String?
  website     String?
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  isDeleted   Boolean   @default(false)
  deletedAt   DateTime?
  products    Product[]
}

model Product {
  id               Int                     @id @default(autoincrement())
  sku              String                  @unique
  name             String
  slug             String                  @unique
  description      String?
  shortDescription String?
  price            Decimal                 @db.Decimal(12, 2)
  salePrice        Decimal?                @db.Decimal(12, 2)
  costPrice        Decimal?                @db.Decimal(12, 2)
  quantity         Int                     @default(0)
  isActive         Boolean                 @default(true)
  isFeatured       Boolean                 @default(false)
  brandId          Int?
  brand            Brand?                  @relation(fields: [brandId], references: [id])
  mainImageUrl     String?
  metaTitle        String?
  metaDescription  String?
  productType      String
  weight           Decimal?                @db.Decimal(8, 2)
  dimensions       Json?
  createdAt        DateTime                @default(now())
  updatedAt        DateTime                @updatedAt
  isDeleted        Boolean                 @default(false)
  deletedAt        DateTime?
  categories       Category[]              @relation("ProductCategories")
  images           ProductImage[]
  attributeValues  ProductAttributeValue[]
  variants         ProductVariant[]        @relation("ParentVariants")
  variantOf        ProductVariant[]        @relation("VariantOf")
  bundlesIncluded  BundleProduct[]         @relation("BundleIncludes")
  isBundle         BundleProduct[]         @relation("IsBundle")
  electronicsSpecs ElectronicsSpec?
  clothingSpecs    ClothingSpec?
  foodSpecs        FoodSpec?
}

model ProductImage {
  id           Int       @id @default(autoincrement())
  productId    Int
  product      Product   @relation(fields: [productId], references: [id])
  imageUrl     String
  altText      String?
  isPrimary    Boolean   @default(false)
  displayOrder Int       @default(0)
  isDeleted    Boolean   @default(false)
  deletedAt    DateTime?
  createdAt    DateTime  @default(now())
}

model Attribute {
  id            Int                     @id @default(autoincrement())
  name          String
  displayName   String
  type          String
  isVariant     Boolean                 @default(false)
  isFilterable  Boolean                 @default(false)
  isRequired    Boolean                 @default(false)
  createdAt     DateTime                @default(now())
  isDeleted     Boolean                 @default(false)
  deletedAt     DateTime?
  values        AttributeValue[]
  productValues ProductAttributeValue[]
}

model AttributeValue {
  id                    Int                     @id @default(autoincrement())
  attributeId           Int
  attribute             Attribute               @relation(fields: [attributeId], references: [id])
  value                 String
  displayValue          String
  createdAt             DateTime                @default(now())
  isDeleted             Boolean                 @default(false)
  deletedAt             DateTime?
  ProductAttributeValue ProductAttributeValue[]
}

model ProductAttributeValue {
  id               Int             @id @default(autoincrement())
  productId        Int
  attributeId      Int
  attributeValueId Int?
  customValue      String?
  isDeleted        Boolean         @default(false)
  deletedAt        DateTime?
  createdAt        DateTime        @default(now())
  product          Product         @relation(fields: [productId], references: [id])
  attribute        Attribute       @relation(fields: [attributeId], references: [id])
  attributeValue   AttributeValue? @relation(fields: [attributeValueId], references: [id])
}

model ProductVariant {
  id               Int       @id @default(autoincrement())
  parentProductId  Int
  variantProductId Int
  sku              String    @unique
  price            Decimal   @db.Decimal(12, 2)
  salePrice        Decimal?  @db.Decimal(12, 2)
  quantity         Int       @default(0)
  isDefault        Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  isDeleted        Boolean   @default(false)
  deletedAt        DateTime?
  parentProduct    Product   @relation("ParentVariants", fields: [parentProductId], references: [id])
  variantProduct   Product   @relation("VariantOf", fields: [variantProductId], references: [id])

  @@unique([parentProductId, variantProductId])
}

model BundleProduct {
  bundleId           Int
  productId          Int
  quantity           Int       @default(1)
  discountPercentage Decimal?  @db.Decimal(5, 2)
  isRequired         Boolean   @default(true)
  createdAt          DateTime  @default(now())
  isDeleted          Boolean   @default(false)
  deletedAt          DateTime?
  bundle             Product   @relation("IsBundle", fields: [bundleId], references: [id])
  product            Product   @relation("BundleIncludes", fields: [productId], references: [id])

  @@id([bundleId, productId])
}

model ElectronicsSpec {
  productId       Int       @id
  product         Product   @relation(fields: [productId], references: [id])
  processor       String?
  ram             String?
  storage         String?
  screenSize      String?
  battery         String?
  camera          String?
  connectivity    String?
  operatingSystem String?
  warrantyInfo    String?
  additionalSpecs Json?
  isDeleted       Boolean   @default(false)
  deletedAt       DateTime?
}

model ClothingSpec {
  productId        Int       @id
  product          Product   @relation(fields: [productId], references: [id])
  material         String?
  careInstructions String?
  fitType          String?
  season           String?
  style            String?
  additionalSpecs  Json?
  isDeleted        Boolean   @default(false)
  deletedAt        DateTime?
}

model FoodSpec {
  productId           Int       @id
  product             Product   @relation(fields: [productId], references: [id])
  ingredients         String?
  allergens           String?
  dietaryInfo         String?
  nutritionalInfo     Json?
  shelfLife           String?
  storageInstructions String?
  additionalSpecs     Json?
  isDeleted           Boolean   @default(false)
  deletedAt           DateTime?
}
